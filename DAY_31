Questions 1.
import java.util.Scanner;

public class Student {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

      
        String correctAnswers = scanner.nextLine().toUpperCase();

       
        int n = scanner.nextInt();
        scanner.nextLine();

      
        for (int i = 0; i < n; i++) {
            String answers = scanner.nextLine().toUpperCase();
            if (answers.length() != correctAnswers.length()) {
                System.out.println("Incorrect Input");
                return;
            }

            double marks = 0;
            for (int j = 0; j < answers.length(); j++) {
                char answer = answers.charAt(j);
                if (answer == 'X') {
                    continue;
                }
                char correctAnswer = correctAnswers.charAt(j);
                if (answer == correctAnswer) {
                    marks += 1;
                } else {
                    marks -= 0.25;
                }
            }
            System.out.print(marks + " ");
        }
    }
}

Questions 2.
import java.util.Scanner;

public class Students {

    public static void main(String[] args) {

        Scanner st = new Scanner(System.in);

        String paragraph = st.nextLine().toLowerCase();

        String word = st.next().toLowerCase();

        int n = st.nextInt();

        if (n <= 0) {

            System.out.println("Incorrect Input");

            return;

        }

        int count = 0;

        int index = -1;

        int lastOccurrenceIndex = -1;

        while (true) {

            index = paragraph.indexOf(word, index + 1);

            if (index == -1) {

                break; 

            }

            count++;

            if (count == n) {

                System.out.println(index);

                return;

            }

            lastOccurrenceIndex = index;

        }

        if (count == 0) {

            System.out.println("Not Present");

            return;

        }

        System.out.println(lastOccurrenceIndex);

    }

}
