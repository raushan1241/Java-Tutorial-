Questions 1.
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Students {

    public static void main(String[] args) {
    Scanner sc=new Scanner(System.in);
       String str =sc.next();
        System.out.println(validPalindrome(str));
        
    }
        public static boolean validPalindrome(String s) {
        int i = 0, j = s.length() - 1;
        
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return isPalindrome(s, i + 1, j) || isPalindrome(s, i, j - 1);
            }
            i++;
            j--;
        }

        return true;
    }
    
    /* Check is s[i...j] is palindrome. */
    private static boolean isPalindrome(String s, int i, int j) {
        
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        
        return true;
    }
}

Questions 2.
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Students {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        String str = sc.nextLine();
        
        str = str.toLowerCase();
        boolean numFound = false;
        
        for(int i=0;i<str.length();i++){
            char ch = str.charAt(i);
            if(Character.isDigit(ch)){
                System.out.println("Invalid input");
                numFound = true;
                break;
            }
        }
        
        if(!numFound){
        
        Stack<Character> st = new Stack<>();
        int i=0;
        String ans = "";
        
        
        while(i<str.length()){
            char ch = str.charAt(i);
            
            if(ch == ' '){
                while(st.isEmpty() == false){
                    ans += st.pop();
                   
                }
                ans += ' ';
            }
            else{
                st.push(ch);
            }
        
           
            i++;
            
            //System.out.println(st);
        }
        while(st.isEmpty() == false){
                    ans += st.pop();
                   // System.out.println(ans);
                }
            System.out.println(ans);
        }
       
            
    }
}

